// Generated from /home/user/projects/sdk/vm/grammar/TLexer.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Use=1, Var=2, If=3, Elif=4, Else=5, For=6, Ret=7, Function=8, Pub=9, Pro=10, 
		Priv=11, Static=12, Final=13, Interface=14, Abstract=15, Extends=16, Class=17, 
		Implements=18, New=19, Break=20, Next=21, Async=22, Await=23, Try=24, 
		Catch=25, ArrowRight=26, ARightLB=27, End=28, Attr=29, Point=30, TwoPoint=31, 
		TwoTwoPoint=32, PointPoint=33, Separator=34, OpenArIndex=35, CloseArIndex=36, 
		OpenBlock=37, CloseBlock=38, OpenOp=39, CloseOp=40, ArithmeticOperator=41, 
		AssignmentOperator=42, Not=43, IncDecOperators=44, Identifier=45, IDPrefix=46, 
		TypeSpec=47, Words=48, Integer=49, Float=50, String=51, BlockComment=52, 
		LineComment=53, Whitespace=54, Newline=55;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"Use", "Var", "If", "Elif", "Else", "For", "Ret", "Function", "Pub", 
			"Pro", "Priv", "Static", "Final", "Interface", "Abstract", "Extends", 
			"Class", "Implements", "New", "Break", "Next", "Async", "Await", "Try", 
			"Catch", "ArrowRight", "ARightLB", "End", "Attr", "Point", "TwoPoint", 
			"TwoTwoPoint", "PointPoint", "Separator", "OpenArIndex", "CloseArIndex", 
			"OpenBlock", "CloseBlock", "OpenOp", "CloseOp", "ArithmeticOperator", 
			"AssignmentOperator", "Not", "IncDecOperators", "Identifier", "IDPrefix", 
			"TypeSpec", "Words", "Integer", "Float", "String", "BlockComment", "LineComment", 
			"Whitespace", "Newline", "DecimalExponent", "DecimalDigits", "FloatLiteral", 
			"IntegerLiteral", "FloatTypeSuffix", "ImaginarySuffix", "IntSuffix", 
			"IntegerFrag", "Decimal", "Binary", "Octal", "Hexadecimal", "DecimalDigit", 
			"OctalDigit", "HexDigit", "FloatFrag", "NUMBER", "DIGITS", "OCTAL_DIGITS", 
			"HEX_DIGITS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'use'", "'var'", "'if'", "'elif'", "'else'", "'for'", "'ret'", 
			"'fn'", "'pub'", "'pro'", "'priv'", "'static'", "'final'", "'interface'", 
			"'abstract'", "'extends'", "'class'", "'implements'", "'new'", "'break'", 
			"'next'", "'async'", "'await'", "'try'", "'catch'", "'->'", "'=>'", "';'", 
			"'='", "'.'", "':'", "'::'", "'..'", "','", "'['", "']'", "'{'", "'}'", 
			"'('", "')'", null, null, "'!'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Use", "Var", "If", "Elif", "Else", "For", "Ret", "Function", "Pub", 
			"Pro", "Priv", "Static", "Final", "Interface", "Abstract", "Extends", 
			"Class", "Implements", "New", "Break", "Next", "Async", "Await", "Try", 
			"Catch", "ArrowRight", "ARightLB", "End", "Attr", "Point", "TwoPoint", 
			"TwoTwoPoint", "PointPoint", "Separator", "OpenArIndex", "CloseArIndex", 
			"OpenBlock", "CloseBlock", "OpenOp", "CloseOp", "ArithmeticOperator", 
			"AssignmentOperator", "Not", "IncDecOperators", "Identifier", "IDPrefix", 
			"TypeSpec", "Words", "Integer", "Float", "String", "BlockComment", "LineComment", 
			"Whitespace", "Newline"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\29\u025e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5"+
		"\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$"+
		"\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0160\n+\3,\3,\3-\3-\3-\3-\5"+
		"-\u0168\n-\3.\3.\3.\3.\6.\u016e\n.\r.\16.\u016f\3.\7.\u0173\n.\f.\16."+
		"\u0176\13.\5.\u0178\n.\3/\3/\5/\u017c\n/\3\60\3\60\3\60\3\61\6\61\u0182"+
		"\n\61\r\61\16\61\u0183\3\62\6\62\u0187\n\62\r\62\16\62\u0188\3\62\3\62"+
		"\6\62\u018d\n\62\r\62\16\62\u018e\5\62\u0191\n\62\3\63\3\63\3\63\5\63"+
		"\u0196\n\63\3\64\3\64\3\64\3\64\7\64\u019c\n\64\f\64\16\64\u019f\13\64"+
		"\3\64\3\64\3\64\3\64\3\64\7\64\u01a6\n\64\f\64\16\64\u01a9\13\64\3\64"+
		"\5\64\u01ac\n\64\3\65\3\65\3\65\3\65\7\65\u01b2\n\65\f\65\16\65\u01b5"+
		"\13\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\7\66\u01c0\n\66\f"+
		"\66\16\66\u01c3\13\66\3\66\3\66\3\67\6\67\u01c8\n\67\r\67\16\67\u01c9"+
		"\3\67\3\67\38\38\58\u01d0\n8\38\58\u01d3\n8\38\38\39\39\39\39\39\39\3"+
		"9\39\39\39\39\59\u01e2\n9\3:\6:\u01e5\n:\r:\16:\u01e6\3;\3;\5;\u01eb\n"+
		";\3<\3<\5<\u01ef\n<\3=\3=\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\5?\u01fe\n"+
		"?\3@\3@\3@\3@\5@\u0204\n@\3A\3A\3A\3A\7A\u020a\nA\fA\16A\u020d\13A\5A"+
		"\u020f\nA\3B\3B\3B\3B\5B\u0215\nB\3B\6B\u0218\nB\rB\16B\u0219\3C\3C\3"+
		"C\6C\u021f\nC\rC\16C\u0220\3D\3D\3D\3D\5D\u0227\nD\3D\3D\6D\u022b\nD\r"+
		"D\16D\u022c\3E\3E\3F\3F\3G\3G\3H\3H\3H\3H\3H\5H\u023a\nH\5H\u023c\nH\3"+
		"H\3H\3H\5H\u0241\nH\5H\u0243\nH\3I\3I\3I\5I\u0248\nI\3J\3J\7J\u024c\n"+
		"J\fJ\16J\u024f\13J\3K\3K\6K\u0253\nK\rK\16K\u0254\3L\3L\3L\3L\6L\u025b"+
		"\nL\rL\16L\u025c\3\u01b3\2M\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32"+
		"\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a"+
		"\62c\63e\64g\65i\66k\67m8o9q\2s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2"+
		"\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091\2\u0093\2\u0095"+
		"\2\u0097\2\3\2\22\6\2\'\',-//\61\61\4\2>>@@\3\2\62;\3\2aa\3\2<<\3\2//"+
		"\3\2$$\3\2))\4\2\f\f\17\17\4\2\13\13\"\"\4\2GGgg\4\2\62;aa\5\2HHNNhh\5"+
		"\2NNWWww\4\2\62\63aa\5\2\62;CHch\3\5\2C\2\\\2c\2|\2\u0082\2\1\22\u028b"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\3\u0099\3\2\2\2\5\u009d\3\2\2\2\7\u00a1\3\2\2\2\t\u00a4"+
		"\3\2\2\2\13\u00a9\3\2\2\2\r\u00ae\3\2\2\2\17\u00b2\3\2\2\2\21\u00b6\3"+
		"\2\2\2\23\u00b9\3\2\2\2\25\u00bd\3\2\2\2\27\u00c1\3\2\2\2\31\u00c6\3\2"+
		"\2\2\33\u00cd\3\2\2\2\35\u00d3\3\2\2\2\37\u00dd\3\2\2\2!\u00e6\3\2\2\2"+
		"#\u00ee\3\2\2\2%\u00f4\3\2\2\2\'\u00ff\3\2\2\2)\u0103\3\2\2\2+\u0109\3"+
		"\2\2\2-\u010e\3\2\2\2/\u0114\3\2\2\2\61\u011a\3\2\2\2\63\u011e\3\2\2\2"+
		"\65\u0124\3\2\2\2\67\u0127\3\2\2\29\u012a\3\2\2\2;\u012c\3\2\2\2=\u012e"+
		"\3\2\2\2?\u0130\3\2\2\2A\u0132\3\2\2\2C\u0135\3\2\2\2E\u0138\3\2\2\2G"+
		"\u013a\3\2\2\2I\u013c\3\2\2\2K\u013e\3\2\2\2M\u0140\3\2\2\2O\u0142\3\2"+
		"\2\2Q\u0144\3\2\2\2S\u0146\3\2\2\2U\u015f\3\2\2\2W\u0161\3\2\2\2Y\u0167"+
		"\3\2\2\2[\u0177\3\2\2\2]\u017b\3\2\2\2_\u017d\3\2\2\2a\u0181\3\2\2\2c"+
		"\u0190\3\2\2\2e\u0195\3\2\2\2g\u01ab\3\2\2\2i\u01ad\3\2\2\2k\u01bb\3\2"+
		"\2\2m\u01c7\3\2\2\2o\u01d2\3\2\2\2q\u01e1\3\2\2\2s\u01e4\3\2\2\2u\u01e8"+
		"\3\2\2\2w\u01ec\3\2\2\2y\u01f0\3\2\2\2{\u01f2\3\2\2\2}\u01fd\3\2\2\2\177"+
		"\u0203\3\2\2\2\u0081\u020e\3\2\2\2\u0083\u0214\3\2\2\2\u0085\u021b\3\2"+
		"\2\2\u0087\u0226\3\2\2\2\u0089\u022e\3\2\2\2\u008b\u0230\3\2\2\2\u008d"+
		"\u0232\3\2\2\2\u008f\u0242\3\2\2\2\u0091\u0247\3\2\2\2\u0093\u0249\3\2"+
		"\2\2\u0095\u0250\3\2\2\2\u0097\u0256\3\2\2\2\u0099\u009a\7w\2\2\u009a"+
		"\u009b\7u\2\2\u009b\u009c\7g\2\2\u009c\4\3\2\2\2\u009d\u009e\7x\2\2\u009e"+
		"\u009f\7c\2\2\u009f\u00a0\7t\2\2\u00a0\6\3\2\2\2\u00a1\u00a2\7k\2\2\u00a2"+
		"\u00a3\7h\2\2\u00a3\b\3\2\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7n\2\2\u00a6"+
		"\u00a7\7k\2\2\u00a7\u00a8\7h\2\2\u00a8\n\3\2\2\2\u00a9\u00aa\7g\2\2\u00aa"+
		"\u00ab\7n\2\2\u00ab\u00ac\7u\2\2\u00ac\u00ad\7g\2\2\u00ad\f\3\2\2\2\u00ae"+
		"\u00af\7h\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7t\2\2\u00b1\16\3\2\2\2\u00b2"+
		"\u00b3\7t\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7v\2\2\u00b5\20\3\2\2\2\u00b6"+
		"\u00b7\7h\2\2\u00b7\u00b8\7p\2\2\u00b8\22\3\2\2\2\u00b9\u00ba\7r\2\2\u00ba"+
		"\u00bb\7w\2\2\u00bb\u00bc\7d\2\2\u00bc\24\3\2\2\2\u00bd\u00be\7r\2\2\u00be"+
		"\u00bf\7t\2\2\u00bf\u00c0\7q\2\2\u00c0\26\3\2\2\2\u00c1\u00c2\7r\2\2\u00c2"+
		"\u00c3\7t\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7x\2\2\u00c5\30\3\2\2\2\u00c6"+
		"\u00c7\7u\2\2\u00c7\u00c8\7v\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca\7v\2\2"+
		"\u00ca\u00cb\7k\2\2\u00cb\u00cc\7e\2\2\u00cc\32\3\2\2\2\u00cd\u00ce\7"+
		"h\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2"+
		"\7n\2\2\u00d2\34\3\2\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6"+
		"\7v\2\2\u00d6\u00d7\7g\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7h\2\2\u00d9"+
		"\u00da\7c\2\2\u00da\u00db\7e\2\2\u00db\u00dc\7g\2\2\u00dc\36\3\2\2\2\u00dd"+
		"\u00de\7c\2\2\u00de\u00df\7d\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1\7v\2\2"+
		"\u00e1\u00e2\7t\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4\7e\2\2\u00e4\u00e5"+
		"\7v\2\2\u00e5 \3\2\2\2\u00e6\u00e7\7g\2\2\u00e7\u00e8\7z\2\2\u00e8\u00e9"+
		"\7v\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7f\2\2\u00ec"+
		"\u00ed\7u\2\2\u00ed\"\3\2\2\2\u00ee\u00ef\7e\2\2\u00ef\u00f0\7n\2\2\u00f0"+
		"\u00f1\7c\2\2\u00f1\u00f2\7u\2\2\u00f2\u00f3\7u\2\2\u00f3$\3\2\2\2\u00f4"+
		"\u00f5\7k\2\2\u00f5\u00f6\7o\2\2\u00f6\u00f7\7r\2\2\u00f7\u00f8\7n\2\2"+
		"\u00f8\u00f9\7g\2\2\u00f9\u00fa\7o\2\2\u00fa\u00fb\7g\2\2\u00fb\u00fc"+
		"\7p\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7u\2\2\u00fe&\3\2\2\2\u00ff\u0100"+
		"\7p\2\2\u0100\u0101\7g\2\2\u0101\u0102\7y\2\2\u0102(\3\2\2\2\u0103\u0104"+
		"\7d\2\2\u0104\u0105\7t\2\2\u0105\u0106\7g\2\2\u0106\u0107\7c\2\2\u0107"+
		"\u0108\7m\2\2\u0108*\3\2\2\2\u0109\u010a\7p\2\2\u010a\u010b\7g\2\2\u010b"+
		"\u010c\7z\2\2\u010c\u010d\7v\2\2\u010d,\3\2\2\2\u010e\u010f\7c\2\2\u010f"+
		"\u0110\7u\2\2\u0110\u0111\7{\2\2\u0111\u0112\7p\2\2\u0112\u0113\7e\2\2"+
		"\u0113.\3\2\2\2\u0114\u0115\7c\2\2\u0115\u0116\7y\2\2\u0116\u0117\7c\2"+
		"\2\u0117\u0118\7k\2\2\u0118\u0119\7v\2\2\u0119\60\3\2\2\2\u011a\u011b"+
		"\7v\2\2\u011b\u011c\7t\2\2\u011c\u011d\7{\2\2\u011d\62\3\2\2\2\u011e\u011f"+
		"\7e\2\2\u011f\u0120\7c\2\2\u0120\u0121\7v\2\2\u0121\u0122\7e\2\2\u0122"+
		"\u0123\7j\2\2\u0123\64\3\2\2\2\u0124\u0125\7/\2\2\u0125\u0126\7@\2\2\u0126"+
		"\66\3\2\2\2\u0127\u0128\7?\2\2\u0128\u0129\7@\2\2\u01298\3\2\2\2\u012a"+
		"\u012b\7=\2\2\u012b:\3\2\2\2\u012c\u012d\7?\2\2\u012d<\3\2\2\2\u012e\u012f"+
		"\7\60\2\2\u012f>\3\2\2\2\u0130\u0131\7<\2\2\u0131@\3\2\2\2\u0132\u0133"+
		"\7<\2\2\u0133\u0134\7<\2\2\u0134B\3\2\2\2\u0135\u0136\7\60\2\2\u0136\u0137"+
		"\7\60\2\2\u0137D\3\2\2\2\u0138\u0139\7.\2\2\u0139F\3\2\2\2\u013a\u013b"+
		"\7]\2\2\u013bH\3\2\2\2\u013c\u013d\7_\2\2\u013dJ\3\2\2\2\u013e\u013f\7"+
		"}\2\2\u013fL\3\2\2\2\u0140\u0141\7\177\2\2\u0141N\3\2\2\2\u0142\u0143"+
		"\7*\2\2\u0143P\3\2\2\2\u0144\u0145\7+\2\2\u0145R\3\2\2\2\u0146\u0147\t"+
		"\2\2\2\u0147T\3\2\2\2\u0148\u0149\7-\2\2\u0149\u0160\7?\2\2\u014a\u014b"+
		"\7/\2\2\u014b\u0160\7?\2\2\u014c\u014d\7,\2\2\u014d\u0160\7?\2\2\u014e"+
		"\u014f\7\61\2\2\u014f\u0160\7?\2\2\u0150\u0151\7\'\2\2\u0151\u0160\7?"+
		"\2\2\u0152\u0160\t\3\2\2\u0153\u0154\7@\2\2\u0154\u0160\7?\2\2\u0155\u0156"+
		"\7>\2\2\u0156\u0160\7?\2\2\u0157\u0158\7(\2\2\u0158\u0160\7(\2\2\u0159"+
		"\u015a\7~\2\2\u015a\u0160\7~\2\2\u015b\u015c\7?\2\2\u015c\u0160\7?\2\2"+
		"\u015d\u015e\7#\2\2\u015e\u0160\7?\2\2\u015f\u0148\3\2\2\2\u015f\u014a"+
		"\3\2\2\2\u015f\u014c\3\2\2\2\u015f\u014e\3\2\2\2\u015f\u0150\3\2\2\2\u015f"+
		"\u0152\3\2\2\2\u015f\u0153\3\2\2\2\u015f\u0155\3\2\2\2\u015f\u0157\3\2"+
		"\2\2\u015f\u0159\3\2\2\2\u015f\u015b\3\2\2\2\u015f\u015d\3\2\2\2\u0160"+
		"V\3\2\2\2\u0161\u0162\7#\2\2\u0162X\3\2\2\2\u0163\u0164\7-\2\2\u0164\u0168"+
		"\7-\2\2\u0165\u0166\7/\2\2\u0166\u0168\7/\2\2\u0167\u0163\3\2\2\2\u0167"+
		"\u0165\3\2\2\2\u0168Z\3\2\2\2\u0169\u0178\5]/\2\u016a\u0174\5]/\2\u016b"+
		"\u0173\5a\61\2\u016c\u016e\t\4\2\2\u016d\u016c\3\2\2\2\u016e\u016f\3\2"+
		"\2\2\u016f\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0173\3\2\2\2\u0171"+
		"\u0173\t\5\2\2\u0172\u016b\3\2\2\2\u0172\u016d\3\2\2\2\u0172\u0171\3\2"+
		"\2\2\u0173\u0176\3\2\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"\u0178\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u0169\3\2\2\2\u0177\u016a\3\2"+
		"\2\2\u0178\\\3\2\2\2\u0179\u017c\t\5\2\2\u017a\u017c\5a\61\2\u017b\u0179"+
		"\3\2\2\2\u017b\u017a\3\2\2\2\u017c^\3\2\2\2\u017d\u017e\t\6\2\2\u017e"+
		"\u017f\5[.\2\u017f`\3\2\2\2\u0180\u0182\t\22\2\2\u0181\u0180\3\2\2\2\u0182"+
		"\u0183\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184b\3\2\2\2"+
		"\u0185\u0187\t\4\2\2\u0186\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0186"+
		"\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u0191\3\2\2\2\u018a\u018c\t\7\2\2\u018b"+
		"\u018d\t\4\2\2\u018c\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018c\3\2"+
		"\2\2\u018e\u018f\3\2\2\2\u018f\u0191\3\2\2\2\u0190\u0186\3\2\2\2\u0190"+
		"\u018a\3\2\2\2\u0191d\3\2\2\2\u0192\u0196\5u;\2\u0193\u0194\t\7\2\2\u0194"+
		"\u0196\5u;\2\u0195\u0192\3\2\2\2\u0195\u0193\3\2\2\2\u0196f\3\2\2\2\u0197"+
		"\u019d\7$\2\2\u0198\u019c\n\b\2\2\u0199\u019a\7^\2\2\u019a\u019c\7$\2"+
		"\2\u019b\u0198\3\2\2\2\u019b\u0199\3\2\2\2\u019c\u019f\3\2\2\2\u019d\u019b"+
		"\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u01a0\3\2\2\2\u019f\u019d\3\2\2\2\u01a0"+
		"\u01ac\7$\2\2\u01a1\u01a7\7)\2\2\u01a2\u01a6\n\t\2\2\u01a3\u01a4\7^\2"+
		"\2\u01a4\u01a6\7)\2\2\u01a5\u01a2\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a6\u01a9"+
		"\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01aa\3\2\2\2\u01a9"+
		"\u01a7\3\2\2\2\u01aa\u01ac\7)\2\2\u01ab\u0197\3\2\2\2\u01ab\u01a1\3\2"+
		"\2\2\u01ach\3\2\2\2\u01ad\u01ae\7\61\2\2\u01ae\u01af\7,\2\2\u01af\u01b3"+
		"\3\2\2\2\u01b0\u01b2\13\2\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b5\3\2\2\2"+
		"\u01b3\u01b4\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b6\3\2\2\2\u01b5\u01b3"+
		"\3\2\2\2\u01b6\u01b7\7,\2\2\u01b7\u01b8\7\61\2\2\u01b8\u01b9\3\2\2\2\u01b9"+
		"\u01ba\b\65\2\2\u01baj\3\2\2\2\u01bb\u01bc\7\61\2\2\u01bc\u01bd\7\61\2"+
		"\2\u01bd\u01c1\3\2\2\2\u01be\u01c0\n\n\2\2\u01bf\u01be\3\2\2\2\u01c0\u01c3"+
		"\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2\u01c4\3\2\2\2\u01c3"+
		"\u01c1\3\2\2\2\u01c4\u01c5\b\66\2\2\u01c5l\3\2\2\2\u01c6\u01c8\t\13\2"+
		"\2\u01c7\u01c6\3\2\2\2\u01c8\u01c9\3\2\2\2\u01c9\u01c7\3\2\2\2\u01c9\u01ca"+
		"\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb\u01cc\b\67\2\2\u01ccn\3\2\2\2\u01cd"+
		"\u01cf\7\17\2\2\u01ce\u01d0\7\f\2\2\u01cf\u01ce\3\2\2\2\u01cf\u01d0\3"+
		"\2\2\2\u01d0\u01d3\3\2\2\2\u01d1\u01d3\7\f\2\2\u01d2\u01cd\3\2\2\2\u01d2"+
		"\u01d1\3\2\2\2\u01d3\u01d4\3\2\2\2\u01d4\u01d5\b8\2\2\u01d5p\3\2\2\2\u01d6"+
		"\u01e2\t\f\2\2\u01d7\u01d8\7g\2\2\u01d8\u01e2\7-\2\2\u01d9\u01da\7G\2"+
		"\2\u01da\u01e2\7-\2\2\u01db\u01dc\7g\2\2\u01dc\u01e2\7/\2\2\u01dd\u01de"+
		"\7G\2\2\u01de\u01df\7/\2\2\u01df\u01e0\3\2\2\2\u01e0\u01e2\5s:\2\u01e1"+
		"\u01d6\3\2\2\2\u01e1\u01d7\3\2\2\2\u01e1\u01d9\3\2\2\2\u01e1\u01db\3\2"+
		"\2\2\u01e1\u01dd\3\2\2\2\u01e2r\3\2\2\2\u01e3\u01e5\t\r\2\2\u01e4\u01e3"+
		"\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6\u01e4\3\2\2\2\u01e6\u01e7\3\2\2\2\u01e7"+
		"t\3\2\2\2\u01e8\u01ea\5\u008fH\2\u01e9\u01eb\5{>\2\u01ea\u01e9\3\2\2\2"+
		"\u01ea\u01eb\3\2\2\2\u01ebv\3\2\2\2\u01ec\u01ee\5\177@\2\u01ed\u01ef\5"+
		"}?\2\u01ee\u01ed\3\2\2\2\u01ee\u01ef\3\2\2\2\u01efx\3\2\2\2\u01f0\u01f1"+
		"\t\16\2\2\u01f1z\3\2\2\2\u01f2\u01f3\7k\2\2\u01f3|\3\2\2\2\u01f4\u01fe"+
		"\t\17\2\2\u01f5\u01f6\7N\2\2\u01f6\u01fe\7w\2\2\u01f7\u01f8\7N\2\2\u01f8"+
		"\u01fe\7W\2\2\u01f9\u01fa\7w\2\2\u01fa\u01fe\7N\2\2\u01fb\u01fc\7W\2\2"+
		"\u01fc\u01fe\7N\2\2\u01fd\u01f4\3\2\2\2\u01fd\u01f5\3\2\2\2\u01fd\u01f7"+
		"\3\2\2\2\u01fd\u01f9\3\2\2\2\u01fd\u01fb\3\2\2\2\u01fe~\3\2\2\2\u01ff"+
		"\u0204\5\u0081A\2\u0200\u0204\5\u0083B\2\u0201\u0204\5\u0085C\2\u0202"+
		"\u0204\5\u0087D\2\u0203\u01ff\3\2\2\2\u0203\u0200\3\2\2\2\u0203\u0201"+
		"\3\2\2\2\u0203\u0202\3\2\2\2\u0204\u0080\3\2\2\2\u0205\u020f\7\62\2\2"+
		"\u0206\u020b\4\63;\2\u0207\u020a\5\u0089E\2\u0208\u020a\7a\2\2\u0209\u0207"+
		"\3\2\2\2\u0209\u0208\3\2\2\2\u020a\u020d\3\2\2\2\u020b\u0209\3\2\2\2\u020b"+
		"\u020c\3\2\2\2\u020c\u020f\3\2\2\2\u020d\u020b\3\2\2\2\u020e\u0205\3\2"+
		"\2\2\u020e\u0206\3\2\2\2\u020f\u0082\3\2\2\2\u0210\u0211\7\62\2\2\u0211"+
		"\u0215\7d\2\2\u0212\u0213\7\62\2\2\u0213\u0215\7D\2\2\u0214\u0210\3\2"+
		"\2\2\u0214\u0212\3\2\2\2\u0215\u0217\3\2\2\2\u0216\u0218\t\20\2\2\u0217"+
		"\u0216\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u0217\3\2\2\2\u0219\u021a\3\2"+
		"\2\2\u021a\u0084\3\2\2\2\u021b\u021e\7\62\2\2\u021c\u021f\5\u008bF\2\u021d"+
		"\u021f\7a\2\2\u021e\u021c\3\2\2\2\u021e\u021d\3\2\2\2\u021f\u0220\3\2"+
		"\2\2\u0220\u021e\3\2\2\2\u0220\u0221\3\2\2\2\u0221\u0086\3\2\2\2\u0222"+
		"\u0223\7\62\2\2\u0223\u0227\7z\2\2\u0224\u0225\7\62\2\2\u0225\u0227\7"+
		"Z\2\2\u0226\u0222\3\2\2\2\u0226\u0224\3\2\2\2\u0227\u022a\3\2\2\2\u0228"+
		"\u022b\5\u008dG\2\u0229\u022b\7a\2\2\u022a\u0228\3\2\2\2\u022a\u0229\3"+
		"\2\2\2\u022b\u022c\3\2\2\2\u022c\u022a\3\2\2\2\u022c\u022d\3\2\2\2\u022d"+
		"\u0088\3\2\2\2\u022e\u022f\4\62;\2\u022f\u008a\3\2\2\2\u0230\u0231\4\62"+
		"9\2\u0231\u008c\3\2\2\2\u0232\u0233\t\21\2\2\u0233\u008e\3\2\2\2\u0234"+
		"\u023b\5s:\2\u0235\u023c\5y=\2\u0236\u0237\7\60\2\2\u0237\u0239\5s:\2"+
		"\u0238\u023a\5q9\2\u0239\u0238\3\2\2\2\u0239\u023a\3\2\2\2\u023a\u023c"+
		"\3\2\2\2\u023b\u0235\3\2\2\2\u023b\u0236\3\2\2\2\u023c\u0243\3\2\2\2\u023d"+
		"\u023e\7\60\2\2\u023e\u0240\5s:\2\u023f\u0241\5q9\2\u0240\u023f\3\2\2"+
		"\2\u0240\u0241\3\2\2\2\u0241\u0243\3\2\2\2\u0242\u0234\3\2\2\2\u0242\u023d"+
		"\3\2\2\2\u0243\u0090\3\2\2\2\u0244\u0248\5\u0093J\2\u0245\u0248\5\u0095"+
		"K\2\u0246\u0248\5\u0097L\2\u0247\u0244\3\2\2\2\u0247\u0245\3\2\2\2\u0247"+
		"\u0246\3\2\2\2\u0248\u0092\3\2\2\2\u0249\u024d\4\63;\2\u024a\u024c\4\62"+
		";\2\u024b\u024a\3\2\2\2\u024c\u024f\3\2\2\2\u024d\u024b\3\2\2\2\u024d"+
		"\u024e\3\2\2\2\u024e\u0094\3\2\2\2\u024f\u024d\3\2\2\2\u0250\u0252\7\62"+
		"\2\2\u0251\u0253\4\629\2\u0252\u0251\3\2\2\2\u0253\u0254\3\2\2\2\u0254"+
		"\u0252\3\2\2\2\u0254\u0255\3\2\2\2\u0255\u0096\3\2\2\2\u0256\u0257\7\62"+
		"\2\2\u0257\u0258\7z\2\2\u0258\u025a\3\2\2\2\u0259\u025b\t\21\2\2\u025a"+
		"\u0259\3\2\2\2\u025b\u025c\3\2\2\2\u025c\u025a\3\2\2\2\u025c\u025d\3\2"+
		"\2\2\u025d\u0098\3\2\2\2\61\2\u015f\u0167\u016f\u0172\u0174\u0177\u017b"+
		"\u0183\u0188\u018e\u0190\u0195\u019b\u019d\u01a5\u01a7\u01ab\u01b3\u01c1"+
		"\u01c9\u01cf\u01d2\u01e1\u01e6\u01ea\u01ee\u01fd\u0203\u0209\u020b\u020e"+
		"\u0214\u0219\u021e\u0220\u0226\u022a\u022c\u0239\u023b\u0240\u0242\u0247"+
		"\u024d\u0254\u025c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}