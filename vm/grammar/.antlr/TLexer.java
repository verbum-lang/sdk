// Generated from /home/user/projects/sdk/vm/grammar/TLexer.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Use=1, Var=2, If=3, Elif=4, Else=5, For=6, Ret=7, Function=8, Pub=9, Pro=10, 
		Priv=11, Static=12, Final=13, Interface=14, Abstract=15, Extends=16, Class=17, 
		Implements=18, New=19, Break=20, Next=21, Async=22, ArrowRight=23, ARightLB=24, 
		End=25, Attr=26, Point=27, TwoPoint=28, TwoTwoPoint=29, Separator=30, 
		OpenArIndex=31, CloseArIndex=32, OpenBlock=33, CloseBlock=34, OpenOp=35, 
		CloseOp=36, ArithmeticOperator=37, AssignmentOperator=38, Not=39, IncDecOperators=40, 
		Identifier=41, IDPrefix=42, TypeSpec=43, String=44, Integer=45, Float=46, 
		Whitespace=47, Newline=48, Words=49, BlockComment=50, LineComment=51;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"Use", "Var", "If", "Elif", "Else", "For", "Ret", "Function", "Pub", 
			"Pro", "Priv", "Static", "Final", "Interface", "Abstract", "Extends", 
			"Class", "Implements", "New", "Break", "Next", "Async", "ArrowRight", 
			"ARightLB", "End", "Attr", "Point", "TwoPoint", "TwoTwoPoint", "Separator", 
			"OpenArIndex", "CloseArIndex", "OpenBlock", "CloseBlock", "OpenOp", "CloseOp", 
			"ArithmeticOperator", "AssignmentOperator", "Not", "IncDecOperators", 
			"Identifier", "IDPrefix", "TypeSpec", "String", "Integer", "Float", "Whitespace", 
			"Newline", "Words", "BlockComment", "LineComment", "DecimalExponent", 
			"DecimalDigits", "FloatLiteral", "IntegerLiteral", "FloatTypeSuffix", 
			"ImaginarySuffix", "IntSuffix", "IntegerFrag", "Decimal", "Binary", "Octal", 
			"Hexadecimal", "DecimalDigit", "OctalDigit", "HexDigit", "FloatFrag", 
			"NUMBER", "DIGITS", "OCTAL_DIGITS", "HEX_DIGITS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'use'", "'var'", "'if'", "'elif'", "'else'", "'for'", "'ret'", 
			"'fn'", "'pub'", "'pro'", "'priv'", "'static'", "'final'", "'interface'", 
			"'abstract'", "'extends'", "'class'", "'implements'", "'new'", "'break'", 
			"'next'", "'async'", "'->'", "'=>'", "';'", "'='", "'.'", "':'", "'::'", 
			"','", "'['", "']'", "'{'", "'}'", "'('", "')'", null, null, "'!'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Use", "Var", "If", "Elif", "Else", "For", "Ret", "Function", "Pub", 
			"Pro", "Priv", "Static", "Final", "Interface", "Abstract", "Extends", 
			"Class", "Implements", "New", "Break", "Next", "Async", "ArrowRight", 
			"ARightLB", "End", "Attr", "Point", "TwoPoint", "TwoTwoPoint", "Separator", 
			"OpenArIndex", "CloseArIndex", "OpenBlock", "CloseBlock", "OpenOp", "CloseOp", 
			"ArithmeticOperator", "AssignmentOperator", "Not", "IncDecOperators", 
			"Identifier", "IDPrefix", "TypeSpec", "String", "Integer", "Float", "Whitespace", 
			"Newline", "Words", "BlockComment", "LineComment"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public TLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "TLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65\u0243\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3"+
		"\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35"+
		"\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3"+
		"&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u0145\n\'\3(\3(\3)\3)\3)\3)\5)\u014d\n"+
		")\3*\3*\3*\3*\6*\u0153\n*\r*\16*\u0154\3*\7*\u0158\n*\f*\16*\u015b\13"+
		"*\5*\u015d\n*\3+\3+\5+\u0161\n+\3,\3,\3,\3-\3-\3-\3-\7-\u016a\n-\f-\16"+
		"-\u016d\13-\3-\3-\3-\3-\3-\7-\u0174\n-\f-\16-\u0177\13-\3-\5-\u017a\n"+
		"-\3.\6.\u017d\n.\r.\16.\u017e\3.\3.\6.\u0183\n.\r.\16.\u0184\5.\u0187"+
		"\n.\3/\3/\3/\5/\u018c\n/\3\60\6\60\u018f\n\60\r\60\16\60\u0190\3\60\3"+
		"\60\3\61\3\61\5\61\u0197\n\61\3\61\5\61\u019a\n\61\3\61\3\61\3\62\6\62"+
		"\u019f\n\62\r\62\16\62\u01a0\3\63\3\63\3\63\3\63\7\63\u01a7\n\63\f\63"+
		"\16\63\u01aa\13\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\7\64\u01b5"+
		"\n\64\f\64\16\64\u01b8\13\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3"+
		"\65\3\65\3\65\3\65\3\65\5\65\u01c7\n\65\3\66\6\66\u01ca\n\66\r\66\16\66"+
		"\u01cb\3\67\3\67\5\67\u01d0\n\67\38\38\58\u01d4\n8\39\39\3:\3:\3;\3;\3"+
		";\3;\3;\3;\3;\3;\3;\5;\u01e3\n;\3<\3<\3<\3<\5<\u01e9\n<\3=\3=\3=\3=\7"+
		"=\u01ef\n=\f=\16=\u01f2\13=\5=\u01f4\n=\3>\3>\3>\3>\5>\u01fa\n>\3>\6>"+
		"\u01fd\n>\r>\16>\u01fe\3?\3?\3?\6?\u0204\n?\r?\16?\u0205\3@\3@\3@\3@\5"+
		"@\u020c\n@\3@\3@\6@\u0210\n@\r@\16@\u0211\3A\3A\3B\3B\3C\3C\3D\3D\3D\3"+
		"D\3D\5D\u021f\nD\5D\u0221\nD\3D\3D\3D\5D\u0226\nD\5D\u0228\nD\3E\3E\3"+
		"E\5E\u022d\nE\3F\3F\7F\u0231\nF\fF\16F\u0234\13F\3G\3G\6G\u0238\nG\rG"+
		"\16G\u0239\3H\3H\3H\3H\6H\u0240\nH\rH\16H\u0241\3\u01a8\2I\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\2k\2m\2o\2q\2s\2u\2w\2"+
		"y\2{\2}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d"+
		"\2\u008f\2\3\2\22\6\2\'\',-//\61\61\4\2>>@@\3\2\62;\3\2aa\3\2<<\3\2$$"+
		"\3\2))\3\2//\4\2\13\13\"\"\4\2\f\f\17\17\4\2GGgg\4\2\62;aa\5\2HHNNhh\5"+
		"\2NNWWww\4\2\62\63aa\5\2\62;CHch\3\5\2C\2\\\2c\2|\2\u0082\2\1\22\u0270"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\3\u0091\3\2\2\2\5\u0095\3\2\2"+
		"\2\7\u0099\3\2\2\2\t\u009c\3\2\2\2\13\u00a1\3\2\2\2\r\u00a6\3\2\2\2\17"+
		"\u00aa\3\2\2\2\21\u00ae\3\2\2\2\23\u00b1\3\2\2\2\25\u00b5\3\2\2\2\27\u00b9"+
		"\3\2\2\2\31\u00be\3\2\2\2\33\u00c5\3\2\2\2\35\u00cb\3\2\2\2\37\u00d5\3"+
		"\2\2\2!\u00de\3\2\2\2#\u00e6\3\2\2\2%\u00ec\3\2\2\2\'\u00f7\3\2\2\2)\u00fb"+
		"\3\2\2\2+\u0101\3\2\2\2-\u0106\3\2\2\2/\u010c\3\2\2\2\61\u010f\3\2\2\2"+
		"\63\u0112\3\2\2\2\65\u0114\3\2\2\2\67\u0116\3\2\2\29\u0118\3\2\2\2;\u011a"+
		"\3\2\2\2=\u011d\3\2\2\2?\u011f\3\2\2\2A\u0121\3\2\2\2C\u0123\3\2\2\2E"+
		"\u0125\3\2\2\2G\u0127\3\2\2\2I\u0129\3\2\2\2K\u012b\3\2\2\2M\u0144\3\2"+
		"\2\2O\u0146\3\2\2\2Q\u014c\3\2\2\2S\u015c\3\2\2\2U\u0160\3\2\2\2W\u0162"+
		"\3\2\2\2Y\u0179\3\2\2\2[\u0186\3\2\2\2]\u018b\3\2\2\2_\u018e\3\2\2\2a"+
		"\u0199\3\2\2\2c\u019e\3\2\2\2e\u01a2\3\2\2\2g\u01b0\3\2\2\2i\u01c6\3\2"+
		"\2\2k\u01c9\3\2\2\2m\u01cd\3\2\2\2o\u01d1\3\2\2\2q\u01d5\3\2\2\2s\u01d7"+
		"\3\2\2\2u\u01e2\3\2\2\2w\u01e8\3\2\2\2y\u01f3\3\2\2\2{\u01f9\3\2\2\2}"+
		"\u0200\3\2\2\2\177\u020b\3\2\2\2\u0081\u0213\3\2\2\2\u0083\u0215\3\2\2"+
		"\2\u0085\u0217\3\2\2\2\u0087\u0227\3\2\2\2\u0089\u022c\3\2\2\2\u008b\u022e"+
		"\3\2\2\2\u008d\u0235\3\2\2\2\u008f\u023b\3\2\2\2\u0091\u0092\7w\2\2\u0092"+
		"\u0093\7u\2\2\u0093\u0094\7g\2\2\u0094\4\3\2\2\2\u0095\u0096\7x\2\2\u0096"+
		"\u0097\7c\2\2\u0097\u0098\7t\2\2\u0098\6\3\2\2\2\u0099\u009a\7k\2\2\u009a"+
		"\u009b\7h\2\2\u009b\b\3\2\2\2\u009c\u009d\7g\2\2\u009d\u009e\7n\2\2\u009e"+
		"\u009f\7k\2\2\u009f\u00a0\7h\2\2\u00a0\n\3\2\2\2\u00a1\u00a2\7g\2\2\u00a2"+
		"\u00a3\7n\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5\7g\2\2\u00a5\f\3\2\2\2\u00a6"+
		"\u00a7\7h\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9\7t\2\2\u00a9\16\3\2\2\2\u00aa"+
		"\u00ab\7t\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7v\2\2\u00ad\20\3\2\2\2\u00ae"+
		"\u00af\7h\2\2\u00af\u00b0\7p\2\2\u00b0\22\3\2\2\2\u00b1\u00b2\7r\2\2\u00b2"+
		"\u00b3\7w\2\2\u00b3\u00b4\7d\2\2\u00b4\24\3\2\2\2\u00b5\u00b6\7r\2\2\u00b6"+
		"\u00b7\7t\2\2\u00b7\u00b8\7q\2\2\u00b8\26\3\2\2\2\u00b9\u00ba\7r\2\2\u00ba"+
		"\u00bb\7t\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7x\2\2\u00bd\30\3\2\2\2\u00be"+
		"\u00bf\7u\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2\7v\2\2"+
		"\u00c2\u00c3\7k\2\2\u00c3\u00c4\7e\2\2\u00c4\32\3\2\2\2\u00c5\u00c6\7"+
		"h\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca"+
		"\7n\2\2\u00ca\34\3\2\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd\7p\2\2\u00cd\u00ce"+
		"\7v\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7t\2\2\u00d0\u00d1\7h\2\2\u00d1"+
		"\u00d2\7c\2\2\u00d2\u00d3\7e\2\2\u00d3\u00d4\7g\2\2\u00d4\36\3\2\2\2\u00d5"+
		"\u00d6\7c\2\2\u00d6\u00d7\7d\2\2\u00d7\u00d8\7u\2\2\u00d8\u00d9\7v\2\2"+
		"\u00d9\u00da\7t\2\2\u00da\u00db\7c\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd"+
		"\7v\2\2\u00dd \3\2\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7z\2\2\u00e0\u00e1"+
		"\7v\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4\7f\2\2\u00e4"+
		"\u00e5\7u\2\2\u00e5\"\3\2\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8\7n\2\2\u00e8"+
		"\u00e9\7c\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7u\2\2\u00eb$\3\2\2\2\u00ec"+
		"\u00ed\7k\2\2\u00ed\u00ee\7o\2\2\u00ee\u00ef\7r\2\2\u00ef\u00f0\7n\2\2"+
		"\u00f0\u00f1\7g\2\2\u00f1\u00f2\7o\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4"+
		"\7p\2\2\u00f4\u00f5\7v\2\2\u00f5\u00f6\7u\2\2\u00f6&\3\2\2\2\u00f7\u00f8"+
		"\7p\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7y\2\2\u00fa(\3\2\2\2\u00fb\u00fc"+
		"\7d\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7c\2\2\u00ff"+
		"\u0100\7m\2\2\u0100*\3\2\2\2\u0101\u0102\7p\2\2\u0102\u0103\7g\2\2\u0103"+
		"\u0104\7z\2\2\u0104\u0105\7v\2\2\u0105,\3\2\2\2\u0106\u0107\7c\2\2\u0107"+
		"\u0108\7u\2\2\u0108\u0109\7{\2\2\u0109\u010a\7p\2\2\u010a\u010b\7e\2\2"+
		"\u010b.\3\2\2\2\u010c\u010d\7/\2\2\u010d\u010e\7@\2\2\u010e\60\3\2\2\2"+
		"\u010f\u0110\7?\2\2\u0110\u0111\7@\2\2\u0111\62\3\2\2\2\u0112\u0113\7"+
		"=\2\2\u0113\64\3\2\2\2\u0114\u0115\7?\2\2\u0115\66\3\2\2\2\u0116\u0117"+
		"\7\60\2\2\u01178\3\2\2\2\u0118\u0119\7<\2\2\u0119:\3\2\2\2\u011a\u011b"+
		"\7<\2\2\u011b\u011c\7<\2\2\u011c<\3\2\2\2\u011d\u011e\7.\2\2\u011e>\3"+
		"\2\2\2\u011f\u0120\7]\2\2\u0120@\3\2\2\2\u0121\u0122\7_\2\2\u0122B\3\2"+
		"\2\2\u0123\u0124\7}\2\2\u0124D\3\2\2\2\u0125\u0126\7\177\2\2\u0126F\3"+
		"\2\2\2\u0127\u0128\7*\2\2\u0128H\3\2\2\2\u0129\u012a\7+\2\2\u012aJ\3\2"+
		"\2\2\u012b\u012c\t\2\2\2\u012cL\3\2\2\2\u012d\u012e\7-\2\2\u012e\u0145"+
		"\7?\2\2\u012f\u0130\7/\2\2\u0130\u0145\7?\2\2\u0131\u0132\7,\2\2\u0132"+
		"\u0145\7?\2\2\u0133\u0134\7\61\2\2\u0134\u0145\7?\2\2\u0135\u0136\7\'"+
		"\2\2\u0136\u0145\7?\2\2\u0137\u0145\t\3\2\2\u0138\u0139\7@\2\2\u0139\u0145"+
		"\7?\2\2\u013a\u013b\7>\2\2\u013b\u0145\7?\2\2\u013c\u013d\7(\2\2\u013d"+
		"\u0145\7(\2\2\u013e\u013f\7~\2\2\u013f\u0145\7~\2\2\u0140\u0141\7?\2\2"+
		"\u0141\u0145\7?\2\2\u0142\u0143\7#\2\2\u0143\u0145\7?\2\2\u0144\u012d"+
		"\3\2\2\2\u0144\u012f\3\2\2\2\u0144\u0131\3\2\2\2\u0144\u0133\3\2\2\2\u0144"+
		"\u0135\3\2\2\2\u0144\u0137\3\2\2\2\u0144\u0138\3\2\2\2\u0144\u013a\3\2"+
		"\2\2\u0144\u013c\3\2\2\2\u0144\u013e\3\2\2\2\u0144\u0140\3\2\2\2\u0144"+
		"\u0142\3\2\2\2\u0145N\3\2\2\2\u0146\u0147\7#\2\2\u0147P\3\2\2\2\u0148"+
		"\u0149\7-\2\2\u0149\u014d\7-\2\2\u014a\u014b\7/\2\2\u014b\u014d\7/\2\2"+
		"\u014c\u0148\3\2\2\2\u014c\u014a\3\2\2\2\u014dR\3\2\2\2\u014e\u015d\5"+
		"U+\2\u014f\u0159\5U+\2\u0150\u0158\5c\62\2\u0151\u0153\t\4\2\2\u0152\u0151"+
		"\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155"+
		"\u0158\3\2\2\2\u0156\u0158\t\5\2\2\u0157\u0150\3\2\2\2\u0157\u0152\3\2"+
		"\2\2\u0157\u0156\3\2\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3\2\2\2\u0159"+
		"\u015a\3\2\2\2\u015a\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u014e\3\2"+
		"\2\2\u015c\u014f\3\2\2\2\u015dT\3\2\2\2\u015e\u0161\t\5\2\2\u015f\u0161"+
		"\5c\62\2\u0160\u015e\3\2\2\2\u0160\u015f\3\2\2\2\u0161V\3\2\2\2\u0162"+
		"\u0163\t\6\2\2\u0163\u0164\5S*\2\u0164X\3\2\2\2\u0165\u016b\7$\2\2\u0166"+
		"\u016a\n\7\2\2\u0167\u0168\7^\2\2\u0168\u016a\7$\2\2\u0169\u0166\3\2\2"+
		"\2\u0169\u0167\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u0169\3\2\2\2\u016b\u016c"+
		"\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u017a\7$\2\2\u016f"+
		"\u0175\7)\2\2\u0170\u0174\n\b\2\2\u0171\u0172\7^\2\2\u0172\u0174\7)\2"+
		"\2\u0173\u0170\3\2\2\2\u0173\u0171\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173"+
		"\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0178\3\2\2\2\u0177\u0175\3\2\2\2\u0178"+
		"\u017a\7)\2\2\u0179\u0165\3\2\2\2\u0179\u016f\3\2\2\2\u017aZ\3\2\2\2\u017b"+
		"\u017d\t\4\2\2\u017c\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u017c\3\2"+
		"\2\2\u017e\u017f\3\2\2\2\u017f\u0187\3\2\2\2\u0180\u0182\t\t\2\2\u0181"+
		"\u0183\t\4\2\2\u0182\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0182\3\2"+
		"\2\2\u0184\u0185\3\2\2\2\u0185\u0187\3\2\2\2\u0186\u017c\3\2\2\2\u0186"+
		"\u0180\3\2\2\2\u0187\\\3\2\2\2\u0188\u018c\5m\67\2\u0189\u018a\t\t\2\2"+
		"\u018a\u018c\5m\67\2\u018b\u0188\3\2\2\2\u018b\u0189\3\2\2\2\u018c^\3"+
		"\2\2\2\u018d\u018f\t\n\2\2\u018e\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190"+
		"\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0193\b\60"+
		"\2\2\u0193`\3\2\2\2\u0194\u0196\7\17\2\2\u0195\u0197\7\f\2\2\u0196\u0195"+
		"\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u019a\3\2\2\2\u0198\u019a\7\f\2\2\u0199"+
		"\u0194\3\2\2\2\u0199\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019b\u019c\b\61"+
		"\2\2\u019cb\3\2\2\2\u019d\u019f\t\22\2\2\u019e\u019d\3\2\2\2\u019f\u01a0"+
		"\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1d\3\2\2\2\u01a2"+
		"\u01a3\7\61\2\2\u01a3\u01a4\7,\2\2\u01a4\u01a8\3\2\2\2\u01a5\u01a7\13"+
		"\2\2\2\u01a6\u01a5\3\2\2\2\u01a7\u01aa\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a8"+
		"\u01a6\3\2\2\2\u01a9\u01ab\3\2\2\2\u01aa\u01a8\3\2\2\2\u01ab\u01ac\7,"+
		"\2\2\u01ac\u01ad\7\61\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af\b\63\2\2\u01af"+
		"f\3\2\2\2\u01b0\u01b1\7\61\2\2\u01b1\u01b2\7\61\2\2\u01b2\u01b6\3\2\2"+
		"\2\u01b3\u01b5\n\13\2\2\u01b4\u01b3\3\2\2\2\u01b5\u01b8\3\2\2\2\u01b6"+
		"\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b9\3\2\2\2\u01b8\u01b6\3\2"+
		"\2\2\u01b9\u01ba\b\64\2\2\u01bah\3\2\2\2\u01bb\u01c7\t\f\2\2\u01bc\u01bd"+
		"\7g\2\2\u01bd\u01c7\7-\2\2\u01be\u01bf\7G\2\2\u01bf\u01c7\7-\2\2\u01c0"+
		"\u01c1\7g\2\2\u01c1\u01c7\7/\2\2\u01c2\u01c3\7G\2\2\u01c3\u01c4\7/\2\2"+
		"\u01c4\u01c5\3\2\2\2\u01c5\u01c7\5k\66\2\u01c6\u01bb\3\2\2\2\u01c6\u01bc"+
		"\3\2\2\2\u01c6\u01be\3\2\2\2\u01c6\u01c0\3\2\2\2\u01c6\u01c2\3\2\2\2\u01c7"+
		"j\3\2\2\2\u01c8\u01ca\t\r\2\2\u01c9\u01c8\3\2\2\2\u01ca\u01cb\3\2\2\2"+
		"\u01cb\u01c9\3\2\2\2\u01cb\u01cc\3\2\2\2\u01ccl\3\2\2\2\u01cd\u01cf\5"+
		"\u0087D\2\u01ce\u01d0\5s:\2\u01cf\u01ce\3\2\2\2\u01cf\u01d0\3\2\2\2\u01d0"+
		"n\3\2\2\2\u01d1\u01d3\5w<\2\u01d2\u01d4\5u;\2\u01d3\u01d2\3\2\2\2\u01d3"+
		"\u01d4\3\2\2\2\u01d4p\3\2\2\2\u01d5\u01d6\t\16\2\2\u01d6r\3\2\2\2\u01d7"+
		"\u01d8\7k\2\2\u01d8t\3\2\2\2\u01d9\u01e3\t\17\2\2\u01da\u01db\7N\2\2\u01db"+
		"\u01e3\7w\2\2\u01dc\u01dd\7N\2\2\u01dd\u01e3\7W\2\2\u01de\u01df\7w\2\2"+
		"\u01df\u01e3\7N\2\2\u01e0\u01e1\7W\2\2\u01e1\u01e3\7N\2\2\u01e2\u01d9"+
		"\3\2\2\2\u01e2\u01da\3\2\2\2\u01e2\u01dc\3\2\2\2\u01e2\u01de\3\2\2\2\u01e2"+
		"\u01e0\3\2\2\2\u01e3v\3\2\2\2\u01e4\u01e9\5y=\2\u01e5\u01e9\5{>\2\u01e6"+
		"\u01e9\5}?\2\u01e7\u01e9\5\177@\2\u01e8\u01e4\3\2\2\2\u01e8\u01e5\3\2"+
		"\2\2\u01e8\u01e6\3\2\2\2\u01e8\u01e7\3\2\2\2\u01e9x\3\2\2\2\u01ea\u01f4"+
		"\7\62\2\2\u01eb\u01f0\4\63;\2\u01ec\u01ef\5\u0081A\2\u01ed\u01ef\7a\2"+
		"\2\u01ee\u01ec\3\2\2\2\u01ee\u01ed\3\2\2\2\u01ef\u01f2\3\2\2\2\u01f0\u01ee"+
		"\3\2\2\2\u01f0\u01f1\3\2\2\2\u01f1\u01f4\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f3"+
		"\u01ea\3\2\2\2\u01f3\u01eb\3\2\2\2\u01f4z\3\2\2\2\u01f5\u01f6\7\62\2\2"+
		"\u01f6\u01fa\7d\2\2\u01f7\u01f8\7\62\2\2\u01f8\u01fa\7D\2\2\u01f9\u01f5"+
		"\3\2\2\2\u01f9\u01f7\3\2\2\2\u01fa\u01fc\3\2\2\2\u01fb\u01fd\t\20\2\2"+
		"\u01fc\u01fb\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe\u01fc\3\2\2\2\u01fe\u01ff"+
		"\3\2\2\2\u01ff|\3\2\2\2\u0200\u0203\7\62\2\2\u0201\u0204\5\u0083B\2\u0202"+
		"\u0204\7a\2\2\u0203\u0201\3\2\2\2\u0203\u0202\3\2\2\2\u0204\u0205\3\2"+
		"\2\2\u0205\u0203\3\2\2\2\u0205\u0206\3\2\2\2\u0206~\3\2\2\2\u0207\u0208"+
		"\7\62\2\2\u0208\u020c\7z\2\2\u0209\u020a\7\62\2\2\u020a\u020c\7Z\2\2\u020b"+
		"\u0207\3\2\2\2\u020b\u0209\3\2\2\2\u020c\u020f\3\2\2\2\u020d\u0210\5\u0085"+
		"C\2\u020e\u0210\7a\2\2\u020f\u020d\3\2\2\2\u020f\u020e\3\2\2\2\u0210\u0211"+
		"\3\2\2\2\u0211\u020f\3\2\2\2\u0211\u0212\3\2\2\2\u0212\u0080\3\2\2\2\u0213"+
		"\u0214\4\62;\2\u0214\u0082\3\2\2\2\u0215\u0216\4\629\2\u0216\u0084\3\2"+
		"\2\2\u0217\u0218\t\21\2\2\u0218\u0086\3\2\2\2\u0219\u0220\5k\66\2\u021a"+
		"\u0221\5q9\2\u021b\u021c\7\60\2\2\u021c\u021e\5k\66\2\u021d\u021f\5i\65"+
		"\2\u021e\u021d\3\2\2\2\u021e\u021f\3\2\2\2\u021f\u0221\3\2\2\2\u0220\u021a"+
		"\3\2\2\2\u0220\u021b\3\2\2\2\u0221\u0228\3\2\2\2\u0222\u0223\7\60\2\2"+
		"\u0223\u0225\5k\66\2\u0224\u0226\5i\65\2\u0225\u0224\3\2\2\2\u0225\u0226"+
		"\3\2\2\2\u0226\u0228\3\2\2\2\u0227\u0219\3\2\2\2\u0227\u0222\3\2\2\2\u0228"+
		"\u0088\3\2\2\2\u0229\u022d\5\u008bF\2\u022a\u022d\5\u008dG\2\u022b\u022d"+
		"\5\u008fH\2\u022c\u0229\3\2\2\2\u022c\u022a\3\2\2\2\u022c\u022b\3\2\2"+
		"\2\u022d\u008a\3\2\2\2\u022e\u0232\4\63;\2\u022f\u0231\4\62;\2\u0230\u022f"+
		"\3\2\2\2\u0231\u0234\3\2\2\2\u0232\u0230\3\2\2\2\u0232\u0233\3\2\2\2\u0233"+
		"\u008c\3\2\2\2\u0234\u0232\3\2\2\2\u0235\u0237\7\62\2\2\u0236\u0238\4"+
		"\629\2\u0237\u0236\3\2\2\2\u0238\u0239\3\2\2\2\u0239\u0237\3\2\2\2\u0239"+
		"\u023a\3\2\2\2\u023a\u008e\3\2\2\2\u023b\u023c\7\62\2\2\u023c\u023d\7"+
		"z\2\2\u023d\u023f\3\2\2\2\u023e\u0240\t\21\2\2\u023f\u023e\3\2\2\2\u0240"+
		"\u0241\3\2\2\2\u0241\u023f\3\2\2\2\u0241\u0242\3\2\2\2\u0242\u0090\3\2"+
		"\2\2\61\2\u0144\u014c\u0154\u0157\u0159\u015c\u0160\u0169\u016b\u0173"+
		"\u0175\u0179\u017e\u0184\u0186\u018b\u0190\u0196\u0199\u01a0\u01a8\u01b6"+
		"\u01c6\u01cb\u01cf\u01d3\u01e2\u01e8\u01ee\u01f0\u01f3\u01f9\u01fe\u0203"+
		"\u0205\u020b\u020f\u0211\u021e\u0220\u0225\u0227\u022c\u0232\u0239\u0241"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}