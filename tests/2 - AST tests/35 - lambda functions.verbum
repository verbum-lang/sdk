
// In principio erat Verbum.

var func = () => a * b;

/*
var func = () -> int => a * b;

var func = (a :int, b :int) -> int => a * b; // Explícito

var func = (a, b) -> int => a * b + 1; // Inferido

var func = (a, b) => a * b + 1; // Inferido

var func = (a, b) => a * b; // Inferido como int, por padrão.

var func :float = (a, b) => a * b; // Inferido como float.

var func = (a :float, b) => a * b; // Inferido como float.

var func = (a, b, c:float) -> int => var a * b + c :int;

var func = (a) => a * 10;


fn myfunc (a :int, n :int) -> int {
    var lb = (a) => a * n;
    ret lb(a);
}


var func = (a) -> int => {
    var b = rand();
    ret a * b;
};

event.callback((a) => {
    print('Event value: {}', a);
});

event.callback((a :int) => {
    print('Event value: {}', a);
});

*/


